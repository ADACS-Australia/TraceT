# Generated by Django 4.0.4 on 2023-01-24 08:03

import django.core.files.storage
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('trigger_app', '0007_event_self_generated_trig_id'),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='lvc_prob_density_tile',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='lvc_retraction_message',
            field=models.CharField(blank=True, max_length=10000, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='lvc_skymap_file',
            field=models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='/home/dylan/development/TraceT/webapp_tracet/media//skymaps'), upload_to=''),
        ),
        migrations.AddField(
            model_name='event',
            name='lvc_skymap_fits',
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='mass_gap_probability',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='neutron_star_probability',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='event',
            name='terrestial_probability',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='eventgroup',
            name='event_observed',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='possibleeventassociation',
            name='event_observed',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='proposaldecision',
            name='alt',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='proposaldecision',
            name='az',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='proposalsettings',
            name='cancel_observation_on_retraction',
            field=models.BooleanField(default=True, help_text='Cancel observations for this event if retraction notice sent by LVC'),
        ),
        migrations.AddField(
            model_name='proposalsettings',
            name='maximum_terrestial_probability',
            field=models.FloatField(default=0.95, help_text='Limit on the probability that the source is terrestrial (i.e., a background noise fluctuation or a glitch)', verbose_name='Maximum probability for event to be terrestial'),
        ),
        migrations.AddField(
            model_name='proposalsettings',
            name='minimum_mass_gap_probability',
            field=models.FloatField(default=0.01, help_text='Limit on the probability that at least one object in the binary has a mass between 3 and 5 solar masses', verbose_name='Minimum mass gap probability for observation'),
        ),
        migrations.AddField(
            model_name='proposalsettings',
            name='minimum_neutron_star_probability',
            field=models.FloatField(default=0.01, help_text='Limit on the probability that at least one object in the binary has a mass that is less than 3 solar masses', verbose_name='Minimum neutron star probability for observation'),
        ),
        migrations.AddField(
            model_name='proposalsettings',
            name='start_observation_at_high_sensitivity',
            field=models.BooleanField(default=True, help_text='On early warnings there will not be positional data so start MWA in sub array mode at the high sensitivity area over the indian ocean', verbose_name='Start observations at high sensitivity area using MWA sub array on early alerts'),
        ),
        migrations.AddField(
            model_name='proposalsettings',
            name='update_observation_using_skymap',
            field=models.BooleanField(default=True, help_text='On initial and update alerts there will be positional data so start MWA in full array mode at the best position for observation, or cancel if bad position for MWA', verbose_name='Update observations with MWA full or sub array on alerts containing positional data'),
        ),
        migrations.AlterField(
            model_name='event',
            name='trig_id',
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='eventgroup',
            name='trig_id',
            field=models.CharField(max_length=64, unique=True),
        ),
        migrations.AlterField(
            model_name='proposaldecision',
            name='trig_id',
            field=models.CharField(blank=True, max_length=64, null=True),
        ),
        migrations.AlterField(
            model_name='proposalsettings',
            name='source_type',
            field=models.CharField(choices=[('GRB', 'Gamma-ray burst'), ('FS', 'Flare star'), ('NU', 'Neutrino'), ('GW', 'Gravitational wave')], max_length=3, verbose_name='What type of source will you trigger on?'),
        ),
    ]
